//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartQA1._1._2.DB.Logging
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LogAuthSchema : DbContext
    {
        public LogAuthSchema()
            : base("name=LogAuthSchema")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AppUser> AppUser { get; set; }
        public virtual DbSet<AppUserTask> AppUserTask { get; set; }
        public virtual DbSet<AppUserTaskLog> AppUserTaskLog { get; set; }
        public virtual DbSet<AppUserTaskMessage> AppUserTaskMessage { get; set; }
        public virtual DbSet<Role> Role { get; set; }
    
        public virtual ObjectResult<AppUser_Insert_Result> AppUser_Insert(string i_RowStatus, string i_AppUser_ID, string i_AppUser_Code, byte[] i_User_Password, string i_Comment, ObjectParameter o_Entity_ID, ObjectParameter o_IsError)
        {
            var i_RowStatusParameter = i_RowStatus != null ?
                new ObjectParameter("i_RowStatus", i_RowStatus) :
                new ObjectParameter("i_RowStatus", typeof(string));
    
            var i_AppUser_IDParameter = i_AppUser_ID != null ?
                new ObjectParameter("i_AppUser_ID", i_AppUser_ID) :
                new ObjectParameter("i_AppUser_ID", typeof(string));
    
            var i_AppUser_CodeParameter = i_AppUser_Code != null ?
                new ObjectParameter("i_AppUser_Code", i_AppUser_Code) :
                new ObjectParameter("i_AppUser_Code", typeof(string));
    
            var i_User_PasswordParameter = i_User_Password != null ?
                new ObjectParameter("i_User_Password", i_User_Password) :
                new ObjectParameter("i_User_Password", typeof(byte[]));
    
            var i_CommentParameter = i_Comment != null ?
                new ObjectParameter("i_Comment", i_Comment) :
                new ObjectParameter("i_Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AppUser_Insert_Result>("AppUser_Insert", i_RowStatusParameter, i_AppUser_IDParameter, i_AppUser_CodeParameter, i_User_PasswordParameter, i_CommentParameter, o_Entity_ID, o_IsError);
        }
    
        public virtual ObjectResult<AppUserTaskLog_Insert_Result> AppUserTaskLog_Insert(string i_RowStatus, string i_AppUser_ID, string i_AppUserTask_ID, string i_AppUserTaskMessage_ID, string i_FilePath, string i_FileName, string i_Description_Eng, string i_Description_Rus, string i_StackTrace, ObjectParameter o_Entity_ID, ObjectParameter o_IsError)
        {
            var i_RowStatusParameter = i_RowStatus != null ?
                new ObjectParameter("i_RowStatus", i_RowStatus) :
                new ObjectParameter("i_RowStatus", typeof(string));
    
            var i_AppUser_IDParameter = i_AppUser_ID != null ?
                new ObjectParameter("i_AppUser_ID", i_AppUser_ID) :
                new ObjectParameter("i_AppUser_ID", typeof(string));
    
            var i_AppUserTask_IDParameter = i_AppUserTask_ID != null ?
                new ObjectParameter("i_AppUserTask_ID", i_AppUserTask_ID) :
                new ObjectParameter("i_AppUserTask_ID", typeof(string));
    
            var i_AppUserTaskMessage_IDParameter = i_AppUserTaskMessage_ID != null ?
                new ObjectParameter("i_AppUserTaskMessage_ID", i_AppUserTaskMessage_ID) :
                new ObjectParameter("i_AppUserTaskMessage_ID", typeof(string));
    
            var i_FilePathParameter = i_FilePath != null ?
                new ObjectParameter("i_FilePath", i_FilePath) :
                new ObjectParameter("i_FilePath", typeof(string));
    
            var i_FileNameParameter = i_FileName != null ?
                new ObjectParameter("i_FileName", i_FileName) :
                new ObjectParameter("i_FileName", typeof(string));
    
            var i_Description_EngParameter = i_Description_Eng != null ?
                new ObjectParameter("i_Description_Eng", i_Description_Eng) :
                new ObjectParameter("i_Description_Eng", typeof(string));
    
            var i_Description_RusParameter = i_Description_Rus != null ?
                new ObjectParameter("i_Description_Rus", i_Description_Rus) :
                new ObjectParameter("i_Description_Rus", typeof(string));
    
            var i_StackTraceParameter = i_StackTrace != null ?
                new ObjectParameter("i_StackTrace", i_StackTrace) :
                new ObjectParameter("i_StackTrace", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AppUserTaskLog_Insert_Result>("AppUserTaskLog_Insert", i_RowStatusParameter, i_AppUser_IDParameter, i_AppUserTask_IDParameter, i_AppUserTaskMessage_IDParameter, i_FilePathParameter, i_FileNameParameter, i_Description_EngParameter, i_Description_RusParameter, i_StackTraceParameter, o_Entity_ID, o_IsError);
        }
    
        public virtual ObjectResult<User_FormType_Get_Result> User_FormType_Get(string i_User_ID, ObjectParameter o_Role_Code, ObjectParameter o_Division_ID, ObjectParameter o_Division_Name, ObjectParameter o_Person_ShortName, ObjectParameter o_IsError)
        {
            var i_User_IDParameter = i_User_ID != null ?
                new ObjectParameter("i_User_ID", i_User_ID) :
                new ObjectParameter("i_User_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User_FormType_Get_Result>("User_FormType_Get", i_User_IDParameter, o_Role_Code, o_Division_ID, o_Division_Name, o_Person_ShortName, o_IsError);
        }
    }
}
