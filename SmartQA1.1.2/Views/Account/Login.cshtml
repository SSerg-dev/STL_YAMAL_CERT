@using SmartQA1._1._2.Models.AccountView

@{
    Layout = "~/Views/Shared/_LayoutBlank.cshtml";
}

@section Scripts {
<style type="text/css">
        body {
            min-height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;

            background-color: transparent;
        }
        #Login .dxflGroupSys  {
            background: white;
        }

        html {
            background: url('@Url.Content("~/img/background_blur_16.png")') no-repeat center center fixed;
            -webkit-background-size: cover;
            -moz-background-size: cover;
            -o-background-size: cover;
            background-size: cover;
            height: 100%;
        }

        body {

        }
</style>
}

@model LoginViewModel
@{
    ViewBag.Title = "Вход";
}

@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}

@using (@Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.DevExpress().FormLayout(
        settings =>
        {
            settings.Name = "Login";
            settings.AlignItemCaptionsInAllGroups = true;
            settings.UseDefaultPaddings = false;
            settings.ControlStyle.CssClass = "centered";

            settings.Items.AddGroupItem(i =>
            {
                i.Caption = ViewBag.Title;

                i.Items.Add(m => m.UserName, itemSettings => {
                    itemSettings.RequiredMarkDisplayMode = FieldRequiredMarkMode.Hidden;
                    itemSettings.NestedExtension().TextBox(s =>
                    {
                        s.ShowModelErrors = true;

                    });
                });

                i.Items.Add(m => m.Password, itemSettings =>
                {
                    itemSettings.RequiredMarkDisplayMode = FieldRequiredMarkMode.Hidden;
                    itemSettings.NestedExtension().TextBox(s =>
                    {
                        s.Properties.Password = true;
                        s.ShowModelErrors = true;

                    });
                });

                i.Items.Add(itemSettings => {
                    itemSettings.ShowCaption = DefaultBoolean.False;
                    itemSettings.HorizontalAlign = FormLayoutHorizontalAlign.Center;
                    itemSettings.NestedExtension().Button(s =>
                    {
                        s.Name = "Submit";
                        s.Text = "Войти";
                        s.UseSubmitBehavior = true;
                        //s.Width = Unit.Pixel(200);
                    });
                });

                i.Items.Add(itemSettings => {
                    itemSettings.ShowCaption = DefaultBoolean.False;
                    itemSettings.SetNestedContent(() =>
                        Html.DevExpress().ValidationSummary().Render()
                    );
                });
            });

        }
    ).GetHtml()
}
